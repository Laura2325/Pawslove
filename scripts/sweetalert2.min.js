//Alertas registro de usuarios
function camposIncompletos() {
  Swal.fire({
    icon: "warning",
    title: "Campos incompletos",
    text: "Por favor, completa todos los campos.",
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
  });
  return;
}

function contrasenasNoCoinciden() {
  Swal.fire({
    icon: "warning",
    title: "Contraseña incorrecta",
    text: "La contraseña y la confirmación no coinciden.",
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
  });
  return;
}

function contrasenaCorta() {
  Swal.fire({
    icon: "warning",
    title: "Contraseña muy corta",
    text: "La contraseña debe tener al menos 8 caracteres.",
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
  });
}

function contrasenaInvalida() {
  Swal.fire({
    icon: "warning",
    title: "Contraseña no segura",
    text: "Debe contener al menos una mayúscula, una minúscula, un número y un símbolo.",
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
  });
}

function simbolosNoPermitidos() {
  Swal.fire({
    icon: "warning",
    title: "Símbolos no permitidos",
    text: "La contraseña no puede contener los símbolos: < > \" ' &",
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
  });
}

function usuarioExistente() {
  Swal.fire({
    title: "Error",
    text: "El correo electrónico ya está registrado.",
    icon: "error",
    allowEnterKey: true,
    allowEscapeKey: true,
    allowOutsideClick: true,
  });
  return;
}

function usuarioRegistrado(close) {
  const Toast = Swal.mixin({
    toast: true,
    position: "bottom-end",
    showConfirmButton: false,
    timer: 3000,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.onmouseenter = Swal.stopTimer;
      toast.onmouseleave = Swal.resumeTimer;
    },
  });
  return Toast.fire({
    icon: "success",
    title: "Registrado con exito.",
  });
  // .then(() => {
  //     history.back();
  // });
}
export const alertasRegistro = {
  camposIncompletos,
  contrasenasNoCoinciden,
  contrasenaCorta,
  contrasenaInvalida,
  simbolosNoPermitidos,
  usuarioExistente,
  usuarioRegistrado,
};

//Alertas login

function loginCorrecto(usuarioEncontrado) {
  Swal.fire({
    title: "¡Bienvenido, " + usuarioEncontrado.nombre + "!",
    text: "Serás redirigido en un momento.",
    icon: "success",
    timer: 2000, // La alerta se cierra después de 2 segundos
    showConfirmButton: false,
    willClose: () => {
      //Redirigir al usuario a una página principal o dashboard dependiendo el tipo de usuario
      usuarioEncontrado.tipo == "Administrador Principal"
        ? window.location.replace("../paginas_admin/admin.html")
        : window.location.replace("index.html");
    },
  });
}

function loginError() {
  Swal.fire({
    icon: "error",
    title: "Error de autenticación",
    text: "Correo o contraseña incorrectos. Por favor, verifica tus datos.",
  });
}

function loginVacio() {
  Swal.fire({
    icon: "warning",
    title: "Campos incompletos",
    text: "Por favor, ingresa tu correo y contraseña.",
  });
}

export const alertasLogin = {
  loginCorrecto,
  loginError,
  loginVacio,
};

//Alertas de restablecer contraseña
function alertRestablecerContra() {
  Swal.fire({
    icon: "success",
    title: "Correo enviado",
    text: "Si tu correo existe en nuestro sistema, te enviaremos un enlace para restablecer tu contraseña. Por favor, revisa tu bandeja de entrada.",
    timer: 5000,
    showConfirmButton: true,
    allowEnterKey: true,
    allowEscapeKey: true,
    allowOutsideClick: true,
  }).then(() => {
    history.back();
  });
}

export const alertRestablecerContrasena = {
  alertRestablecerContra,
};

//Alertas de pagina productos

function camposProductoVacios() {
  Swal.fire({
    title: "Error",
    text: "Por favor, completa todos los campos.",
    icon: "error",
  });
  return;
}

export const alertasProductos = {
  camposProductoVacios,
};

//Alertas de administrador de usuarios

function usuarioEliminado() {
  Swal.fire({
    icon: "success",
    title: "Usuario Eliminado",
    text: "El usuario ha sido eliminado correctamente.",
    showConfirmButton: false,
    timer: 1500,
  });
}

function solicitudAprobada() {
  Swal.fire({
    icon: "success",
    title: "Solicitud Aprobada",
    text: "La solicitud de adopción ha sido aprobada.",
    showConfirmButton: false,
    timer: 1500,
  });
}

function solicitudRechazada() {
  Swal.fire({
    icon: "info",
    title: "Solicitud Rechazada",
    text: "La solicitud de adopción ha sido rechazada.",
    showConfirmButton: false,
    timer: 1500,
  });
}

function nuevosDatosCargados() {
  const Toast = Swal.mixin({
    toast: true,
    position: "top-end",
    showConfirmButton: false,
    timer: 3000,
    timerProgressBar: true,
  });
  Toast.fire({
    icon: "success",
    title: "Datos actualizados",
  });
}

export const alertasAdminUsuarios = {
  usuarioEliminado,
  solicitudAprobada,
  solicitudRechazada,
  nuevosDatosCargados,
};

//Alertas de pagina adopta

function seleccionAdopcion(nombreMascota) {
    return Swal.fire({
        icon: 'info',
        title: '¡Proceso en marcha!',
        text: `Vas a adoptar a ${nombreMascota}, en un momento serás redireccionado para continuar con el proceso.`,
        showConfirmButton: false,
        timer: 4000,
        timerProgressBar: true
    }).then(() => {
        window.location.href = '../paginas/formulario-adopcion.html';
    });    
}

export const alertasAdopcion = {
  seleccionAdopcion,
};

// Alertas de utilidades (toast)
function showToast(message) {
  elements.toastMessage.textContent = message;
  elements.toast.classList.remove(
    "opacity-0",
    "pointer-events-none",
    "translate-y-2"
  );

  setTimeout(() => {
    elements.toast.classList.add(
      "opacity-0",
      "pointer-events-none",
      "translate-y-2"
    );
  }, 4000);
}

function closeModal() {
  elements.modalContent.classList.remove("modal-enter-active");
  setTimeout(() => {
    elements.donationModal.classList.add("opacity-0", "pointer-events-none");
  }, 200);
}
